unit ufrmSenha;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.Edit,
  FMX.StdCtrls, FMX.Layouts, FMX.Controls.Presentation, FMX.Objects,
  System.Actions, FMX.ActnList;

type
  TConfirmar = procedure(Sender: TObject) of object;
  TCancelar  = procedure(Sender: TObject) of object;

  TfrmSenha = class(TForm)
    ActionList1: TActionList;
    acEscape: TAction;
    acClose: TAction;
    pEntradaDado: TPanel;
    btConfirmarEvento: TButton;
    lbMensagemInput: TLabel;
    edtInputDados: TEdit;
    lbSenha: TLabel;
    edtUsuario: TEdit;
    Rectangle1: TRectangle;
    StyleBook1: TStyleBook;
    procedure btConfirmarEventoClick(Sender: TObject);
    procedure btCancelarEventoClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure edtInputDadosKeyDown(Sender: TObject; var Key: Word;
      var KeyChar: Char; Shift: TShiftState);
    procedure acEscapeExecute(Sender: TObject);
  private
    { Private declarations }
    FConfirmar : TConfirmar;
    FCancelar  : TCancelar;
  public
    { Public declarations }

    property  Confirmar : TConfirmar read FConfirmar write FConfirmar;
    property  Cancelar  : TCancelar  read FCancelar  write FCancelar;
    procedure CarregarMensagem(titulo: string = 'MemoCash';  mensagem : string = 'Usuário');
  end;

var
  frmSenha: TfrmSenha;

implementation

{$R *.fmx}

{ TForm1 }

procedure TfrmSenha.acEscapeExecute(Sender: TObject);
begin
  Cancelar(Sender);
  Close;
end;

procedure TfrmSenha.btCancelarEventoClick(Sender: TObject);
begin
  Cancelar(Sender);
end;

procedure TfrmSenha.btConfirmarEventoClick(Sender: TObject);
begin
  Confirmar(Sender);
end;

procedure TfrmSenha.CarregarMensagem(titulo, mensagem: string);
begin
  //lbTituloInput.Text   := titulo;
  //lbMensagemInput.Font.Size := 14;
  //lbMensagemInput.Text := mensagem;
end;

procedure TfrmSenha.edtInputDadosKeyDown(Sender: TObject; var Key: Word;
  var KeyChar: Char; Shift: TShiftState);
begin
  try
    KeyChar := KeyChar.ToUpper;

    if (Key = VKReturn) then
    begin
      if (edtUsuario.Text.IsEmpty and edtInputDados.Text.IsEmpty) or ((Length(edtUsuario.text) = 0) and (Length(edtInputDados.text) = 0)) then
        Cancelar(Sender)
      else
        Confirmar(Sender);
    end;
  except
    on E: Exception do
  end;
end;

procedure TfrmSenha.FormCreate(Sender: TObject);
begin
  edtUsuario.SetFocus;
  btConfirmarEvento.Text := 'Acessar[ENTER]';
  btConfirmarEvento.TextSettings.Font.Family := 'Roboto';
  btConfirmarEvento.TextSettings.Font.Size   := 16;
  frmSenha.Height := 180;
  frmSenha.Width  := 660;
end;

end.
